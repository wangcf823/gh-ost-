gh-ost是MySQL的无触发在线模式迁移解决方案。它是可测试的，提供暂停性、动态控制/重新配置、审计和许多操作福利。

gh-ost在整个迁移过程中在主节点上产生较轻的工作负载，与迁移表上的现有工作负载解耦。

它是基于多年的现有解决方案经验设计的，并改变了表迁移的范式。

How?
所有现有的在线模式更改工具都以类似的方式运行：它们创建一个与原始表相似的重影表，在空的情况下迁移该表，缓慢且增量地将数据从原始表复制到重影表，
同时传播正在进行的更改（任何INSERT、DELETE, UPDATE应用于您的表）到重影表。最后，在正确的时间，他们用重影表替换了你原来的表。

gh-ost使用相同的模式。但是，它与所有现有工具的不同之处在于不使用触发器。我们认识到，触发因素是许多限制和风险的根源。

相反，gh-ost使用二进制日志流来捕获表更改，并异步地将它们应用到重影表上。
gh-ost自己承担了其他工具留给数据库执行的一些任务。因此，gh-ost对迁移过程有了更大的控制；可以真正暂停迁移过程；可以真正将迁移的写入负载与主机工作负载解耦。

此外，它还提供了许多操作福利，使其更安全、值得信赖和使用乐趣。

Highlights亮点
通过在副本上测试gh-ost来建立您对gh-ost的信任。
gh-ost将发出与主机上相同的流，以迁移副本上的表，而不实际替换原始表，将复制副本保留两个表，然后您可以比较并确信工具运行正确。这就是我们在生产中不断测试gh-ost的方式。

真正暂停：当gh-ost限制时，它真正停止在主机上的写入：没有行副本，也没有正在进行的事件处理。通过节流，您可以将主机恢复到其原始工作负载

动态控制：您可以交互式重新配置gh-ost，即使迁移仍在运行。您可以强制启动节流。

审计：您可以查询gh-ost以了解状态。gh-ost监听unix套接字或TCP。

对切换阶段的控制：gh-ost可以被指示推迟可能是最关键的步骤：交换表，直到你可以舒适地使用。不用担心预计到达时间在办公时间以外。

外部钩子可以将gh-ost与您的特定环境耦合。

有关更多信息，请参阅文档。不，真的，read the docs。



















